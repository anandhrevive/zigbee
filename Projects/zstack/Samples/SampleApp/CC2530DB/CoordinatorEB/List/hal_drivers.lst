###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                16/Sep/2011  10:53:01 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Components\hal\common\hal_drivers.c  #
#    Command line       =  -f "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"   #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"  #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Documents and           #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Com #
#                          ponents\hal\common\hal_drivers.c" -D ZTOOL_P1 -D   #
#                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D           #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D              #
#                          BUILD_ALL_DEVICES -D xLCD_SUPPORTED=DEBUG -D       #
#                          SOFT_SATRT -D ZDO_COORDINATOR -D NV_INIT -D        #
#                          RTR_NWK -lC "C:\Documents and                      #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\Coordinato #
#                          rEB\List\" -lA "C:\Documents and                   #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\Coordinato #
#                          rEB\List\" --diag_suppress Pe001,Pa010 -o          #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\Obj\" -e                     #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Documents and          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\" -I       #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\SOURCE\" -I "C:\Documents and           #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Z #
#                          MAIN\TI2530DB\" -I "C:\Documents and               #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MT\" -I "C:\Documents and          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\HAL\INCLUDE\" -I "C:\Documents     #
#                          and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I       #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE #
#                          \" -I "C:\Documents and Settings\Administrator\×ÀÃ #
#                          æ\ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\"  #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\"  #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\"    #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I     #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SDA #
#                          TA\" -I "C:\Documents and                          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MAC\INCLUDE\" -I "C:\Documents     #
#                          and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I            #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\sr #
#                          f04\" -I "C:\Documents and                         #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\"  #
#                          -I D:\IAR\8051\INC\ -I D:\IAR\8051\INC\CLIB\ -Ohz  #
#    List file          =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\CoordinatorEB\List\hal_drivers.lst          #
#    Object file        =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\CoordinatorEB\Obj\hal_drivers.r51           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Components\hal\common\hal_drivers.c
      1          /**************************************************************************************************
      2            Filename:       hal_drivers.c
      3            Revised:        $Date: 2007-07-06 10:42:24 -0700 (Fri, 06 Jul 2007) $
      4            Revision:       $Revision: 13579 $
      5          
      6            Description:    This file contains the interface to the Drivers Service.
      7          
      8          
      9            Copyright 2005-2010 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          
     41          /**************************************************************************************************
     42           *                                            INCLUDES
     43           **************************************************************************************************/
     44          #include "hal_types.h"
     45          #include "OSAL.h"
     46          #include "hal_drivers.h"
     47          #include "hal_adc.h"
     48          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
     49            #include "hal_dma.h"
     50          #endif
     51          #include "hal_key.h"
     52          #include "hal_lcd.h"
     53          #include "hal_led.h"
     54          #include "hal_timer.h"
     55          #include "hal_uart.h"
     56          #include "hal_sleep.h"
     57          #if (defined HAL_AES) && (HAL_AES == TRUE)
     58            #include "hal_aes.h"
     59          #endif
     60          
     61          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
     62            #include "hal_spi.h"
     63          #endif
     64          #if (defined HAL_HID) && (HAL_HID == TRUE)
     65            #include "usb_hid.h"
     66          #endif
     67          
     68          /**************************************************************************************************
     69           *                                            MACROS
     70           **************************************************************************************************/
     71          
     72          
     73          
     74          /**************************************************************************************************
     75           *                                          CONSTANTS
     76           **************************************************************************************************/
     77          
     78          
     79          /**************************************************************************************************
     80           *                                          TYPEDEFS
     81           **************************************************************************************************/
     82          
     83          
     84          /**************************************************************************************************
     85           *                                      GLOBAL VARIABLES
     86           **************************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     87          uint8 Hal_TaskID;
   \                     Hal_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     88          
     89          extern void HalLedUpdate( void ); /* Notes: This for internal only so it shouldn't be in hal_led.h */
     90          
     91          /**************************************************************************************************
     92           *                                      FUNCTIONS - API
     93           **************************************************************************************************/
     94          
     95          /**************************************************************************************************
     96           * @fn      Hal_Init
     97           *
     98           * @brief   Hal Initialization function.
     99           *
    100           * @param   task_id - Hal TaskId
    101           *
    102           * @return  None
    103           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    104          void Hal_Init( uint8 task_id )
   \                     Hal_Init:
    105          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    106            /* Register task ID */
    107            Hal_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#Hal_TaskID
   \   000008   F0           MOVX    @DPTR,A
    108          }
   \   000009                REQUIRE ?Subroutine0
   \   000009                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    109          
    110          /**************************************************************************************************
    111           * @fn      Hal_DriverInit
    112           *
    113           * @brief   Initialize HW - These need to be initialized before anyone.
    114           *
    115           * @param   task_id - Hal TaskId
    116           *
    117           * @return  None
    118           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    119          void HalDriverInit (void)
   \                     HalDriverInit:
    120          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    121            /* TIMER */
    122          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    123            #error "The hal timer driver module is removed."
    124          #endif
    125          
    126            /* ADC */
    127          #if (defined HAL_ADC) && (HAL_ADC == TRUE)
    128            HalAdcInit();
   \   000004                ; Setup parameters for call to function HalAdcInit
   \   000004   12....       LCALL   ??HalAdcInit?relay
    129          #endif
    130          
    131            /* DMA */
    132          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
    133            // Must be called before the init call to any module that uses DMA.
    134            HalDmaInit();
   \   000007                ; Setup parameters for call to function HalDmaInit
   \   000007   12....       LCALL   ??HalDmaInit?relay
    135          #endif
    136          
    137            /* AES */
    138          #if (defined HAL_AES) && (HAL_AES == TRUE)
    139            HalAesInit();
   \   00000A                ; Setup parameters for call to function HalAesInit
   \   00000A   12....       LCALL   ??HalAesInit?relay
    140          #endif
    141          
    142            /* LCD */
    143          #if (defined HAL_LCD) && (HAL_LCD == TRUE)
    144            HalLcdInit();
   \   00000D                ; Setup parameters for call to function HalLcdInit
   \   00000D   12....       LCALL   ??HalLcdInit?relay
    145          #endif
    146          
    147            /* LED */
    148          #if (defined HAL_LED) && (HAL_LED == TRUE)
    149            HalLedInit();
   \   000010                ; Setup parameters for call to function HalLedInit
   \   000010   12....       LCALL   ??HalLedInit?relay
    150          #endif
    151          
    152            /* UART */
    153          #if (defined HAL_UART) && (HAL_UART == TRUE)
    154            HalUARTInit();
   \   000013                ; Setup parameters for call to function HalUARTInit
   \   000013   12....       LCALL   ??HalUARTInit?relay
    155          #endif
    156          
    157            /* KEY */
    158          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    159            HalKeyInit();
   \   000016                ; Setup parameters for call to function HalKeyInit
   \   000016   12....       LCALL   ??HalKeyInit?relay
    160          #endif
    161          
    162            /* SPI */
    163          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    164            HalSpiInit();
    165          #endif
    166          
    167            /* HID */
    168          #if (defined HAL_HID) && (HAL_HID == TRUE)
    169            usbHidInit();
    170          #endif
    171          }
   \   000019   80..         SJMP    ?Subroutine0
    172          
    173          
    174          /**************************************************************************************************
    175           * @fn      Hal_ProcessEvent
    176           *
    177           * @brief   Hal Process Event
    178           *
    179           * @param   task_id - Hal TaskId
    180           *          events - events
    181           *
    182           * @return  None
    183           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    184          uint16 Hal_ProcessEvent( uint8 task_id, uint16 events )
   \                     Hal_ProcessEvent:
    185          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    186            uint8 *msgPtr;
    187            
    188            (void)task_id;  // Intentionally unreferenced parameter
    189          
    190            if ( events & SYS_EVENT_MSG )
   \   000009   7480         MOV     A,#-0x80
   \   00000B   5F           ANL     A,R7
   \   00000C   F9           MOV     R1,A
   \   00000D   E4           CLR     A
   \   00000E   7001         JNZ     ??Hal_ProcessEvent_0
   \   000010   E9           MOV     A,R1
   \                     ??Hal_ProcessEvent_0:
   \   000011   601B         JZ      ??Hal_ProcessEvent_1
    191            {
    192              msgPtr = osal_msg_receive(Hal_TaskID);
   \   000013                ; Setup parameters for call to function osal_msg_receive
   \   000013   8003         SJMP    ??Hal_ProcessEvent_2
    193          
    194              while (msgPtr)
    195              {
    196                /* Do something here - for now, just deallocate the msg and move on */
    197          
    198                /* De-allocate */
    199                osal_msg_deallocate( msgPtr );
   \                     ??Hal_ProcessEvent_3:
   \   000015                ; Setup parameters for call to function osal_msg_deallocate
   \   000015   12....       LCALL   ??osal_msg_deallocate?relay
    200                /* Next */
    201                msgPtr = osal_msg_receive( Hal_TaskID );
   \   000018                ; Setup parameters for call to function osal_msg_receive
   \                     ??Hal_ProcessEvent_2:
   \   000018   90....       MOV     DPTR,#Hal_TaskID
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F9           MOV     R1,A
   \   00001D   12....       LCALL   ??osal_msg_receive?relay
    202              }
   \   000020   EA           MOV     A,R2
   \   000021   7001         JNZ     ??Hal_ProcessEvent_4
   \   000023   EB           MOV     A,R3
   \                     ??Hal_ProcessEvent_4:
   \   000024   70EF         JNZ     ??Hal_ProcessEvent_3
    203              return events ^ SYS_EVENT_MSG;
   \   000026   EE           MOV     A,R6
   \   000027   FA           MOV     R2,A
   \   000028   7480         MOV     A,#-0x80
   \   00002A   6F           XRL     A,R7
   \                     ??Hal_ProcessEvent_5:
   \   00002B   FB           MOV     R3,A
   \   00002C   8035         SJMP    ??Hal_ProcessEvent_6
    204            }
    205          
    206            if ( events & HAL_LED_BLINK_EVENT )
   \                     ??Hal_ProcessEvent_1:
   \   00002E   EE           MOV     A,R6
   \   00002F   5402         ANL     A,#0x2
   \   000031   600A         JZ      ??Hal_ProcessEvent_7
    207            {
    208          #if (defined (BLINK_LEDS)) && (HAL_LED == TRUE)
    209              HalLedUpdate();
   \   000033                ; Setup parameters for call to function HalLedUpdate
   \   000033   12....       LCALL   ??HalLedUpdate?relay
    210          #endif /* BLINK_LEDS && HAL_LED */
    211              return events ^ HAL_LED_BLINK_EVENT;
   \   000036   7402         MOV     A,#0x2
   \                     ??Hal_ProcessEvent_8:
   \   000038   6E           XRL     A,R6
   \   000039   FA           MOV     R2,A
   \   00003A   EF           MOV     A,R7
   \   00003B   80EE         SJMP    ??Hal_ProcessEvent_5
    212            }
    213          
    214            if (events & HAL_KEY_EVENT)
   \                     ??Hal_ProcessEvent_7:
   \   00003D   EE           MOV     A,R6
   \   00003E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000040   501D         JNC     ??Hal_ProcessEvent_9
    215            {
    216          
    217          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    218              /* Check for keys */
    219              HalKeyPoll();
   \   000042                ; Setup parameters for call to function HalKeyPoll
   \   000042   12....       LCALL   ??HalKeyPoll?relay
    220          
    221              /* if interrupt disabled, do next polling */
    222              if (!Hal_KeyIntEnable)
   \   000045   90....       MOV     DPTR,#Hal_KeyIntEnable
   \   000048   E0           MOVX    A,@DPTR
   \   000049   7010         JNZ     ??Hal_ProcessEvent_10
    223              {
    224                osal_start_timerEx( Hal_TaskID, HAL_KEY_EVENT, 100);
   \   00004B                ; Setup parameters for call to function osal_start_timerEx
   \   00004B   7C64         MOV     R4,#0x64
   \   00004D   7D00         MOV     R5,#0x0
   \   00004F   7A01         MOV     R2,#0x1
   \   000051   7B00         MOV     R3,#0x0
   \   000053   90....       MOV     DPTR,#Hal_TaskID
   \   000056   E0           MOVX    A,@DPTR
   \   000057   F9           MOV     R1,A
   \   000058   12....       LCALL   ??osal_start_timerEx?relay
    225              }
    226          #endif // HAL_KEY
    227          
    228              return events ^ HAL_KEY_EVENT;
   \                     ??Hal_ProcessEvent_10:
   \   00005B   7401         MOV     A,#0x1
   \   00005D   80D9         SJMP    ??Hal_ProcessEvent_8
    229            }
    230          
    231          #ifdef POWER_SAVING
    232            if ( events & HAL_SLEEP_TIMER_EVENT )
    233            {
    234              halRestoreSleepLevel();
    235              return events ^ HAL_SLEEP_TIMER_EVENT;
    236            }
    237          #endif
    238          
    239            /* Nothing interested, discard the message */
    240            return 0;
   \                     ??Hal_ProcessEvent_9:
   \   00005F   7A00         MOV     R2,#0x0
   \   000061   7B00         MOV     R3,#0x0
   \                     ??Hal_ProcessEvent_6:
   \   000063   7F02         MOV     R7,#0x2
   \   000065   02....       LJMP    ?BANKED_LEAVE_XDATA
    241          
    242          }
    243          
    244          /**************************************************************************************************
    245           * @fn      Hal_ProcessPoll
    246           *
    247           * @brief   This routine will be called by OSAL to poll UART, TIMER...
    248           *
    249           * @param   task_id - Hal TaskId
    250           *
    251           * @return  None
    252           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    253          void Hal_ProcessPoll ()
   \                     Hal_ProcessPoll:
    254          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    255          
    256            /* Timer Poll */
    257          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    258            #error "The hal timer driver module is removed."
    259          #endif
    260          
    261            /* UART Poll */
    262          #if (defined HAL_UART) && (HAL_UART == TRUE)
    263            HalUARTPoll();
   \   000004                ; Setup parameters for call to function HalUARTPoll
   \   000004   12....       LCALL   ??HalUARTPoll?relay
    264          #endif  
    265          
    266            /* SPI Poll */
    267          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    268            HalSpiPoll();
    269          #endif
    270          
    271            /* HID poll */
    272          #if (defined HAL_HID) && (HAL_HID == TRUE)
    273            usbHidProcessEvents();
    274          #endif
    275            
    276          #if defined( POWER_SAVING )
    277            /* Allow sleep before the next OSAL event loop */
    278            ALLOW_SLEEP_MODE();
    279          #endif
    280          }
   \   000007   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalDriverInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalDriverInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessPoll?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessPoll
    281          
    282          
    283          /**************************************************************************************************
    284          **************************************************************************************************/
    285          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     HalDriverInit                2      0      0
       -> HalAdcInit              4      0      0
       -> HalDmaInit              4      0      0
       -> HalAesInit              4      0      0
       -> HalLcdInit              4      0      0
       -> HalLedInit              4      0      0
       -> HalUARTInit             4      0      0
       -> HalKeyInit              4      0      0
     Hal_Init                     2      0      0
     Hal_ProcessEvent             0      0     10
       -> osal_msg_receive        0      0     20
       -> osal_msg_deallocate     0      0     20
       -> osal_msg_receive        0      0     20
       -> HalLedUpdate            0      0     20
       -> HalKeyPoll              0      0     20
       -> osal_start_timerEx      0      0     20
     Hal_ProcessPoll              2      0      0
       -> HalUARTPoll             4      0      0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     Hal_TaskID                  1
     Hal_Init                    9
     ?Subroutine0                7
     HalDriverInit              27
     Hal_ProcessEvent          104
     Hal_ProcessPoll            10
     ??Hal_Init?relay            6
     ??HalDriverInit?relay       6
     ??Hal_ProcessEvent?relay    6
     ??Hal_ProcessPoll?relay     6

 
 157 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_Z
 
 181 bytes of CODE  memory
   1 byte  of XDATA memory

Errors: none
Warnings: none
