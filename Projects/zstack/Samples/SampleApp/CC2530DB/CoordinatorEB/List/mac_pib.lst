###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                16/Sep/2011  10:53:10 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Components\mac\high_level\mac_pib.c  #
#    Command line       =  -f "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"   #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"  #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Documents and           #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Com #
#                          ponents\mac\high_level\mac_pib.c" -D ZTOOL_P1 -D   #
#                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D           #
#                          HAL_UART=TRUE -D SERIAL_APP_PORT=0 -D              #
#                          BUILD_ALL_DEVICES -D xLCD_SUPPORTED=DEBUG -D       #
#                          SOFT_SATRT -D ZDO_COORDINATOR -D NV_INIT -D        #
#                          RTR_NWK -lC "C:\Documents and                      #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\Coordinato #
#                          rEB\List\" -lA "C:\Documents and                   #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\Coordinato #
#                          rEB\List\" --diag_suppress Pe001,Pa010 -o          #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\CoordinatorEB\Obj\" -e                     #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Documents and          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\" -I       #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\SOURCE\" -I "C:\Documents and           #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Z #
#                          MAIN\TI2530DB\" -I "C:\Documents and               #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MT\" -I "C:\Documents and          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\HAL\INCLUDE\" -I "C:\Documents     #
#                          and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I       #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE #
#                          \" -I "C:\Documents and Settings\Administrator\×ÀÃ #
#                          æ\ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\"  #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\"  #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\"   #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\"    #
#                          -I "C:\Documents and Settings\Administrator\×ÀÃæ\Z #
#                          Stack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I     #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ\ #
#                          ZStack¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SDA #
#                          TA\" -I "C:\Documents and                          #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MAC\INCLUDE\" -I "C:\Documents     #
#                          and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I            #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\ZSta #
#                          ck¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\sr #
#                          f04\" -I "C:\Documents and                         #
#                          Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\"  #
#                          -I D:\IAR\8051\INC\ -I D:\IAR\8051\INC\CLIB\ -Ohz  #
#    List file          =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\CoordinatorEB\List\mac_pib.lst              #
#    Object file        =  C:\Documents and Settings\Administrator\×ÀÃæ\ZStac #
#                          k¶¨Ê±¸´Î»¼ì²â\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\CoordinatorEB\Obj\mac_pib.r51               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\×ÀÃæ\ZStack¶¨Ê±¸´Î»¼ì²â\Components\mac\high_level\mac_pib.c
      1          /**************************************************************************************************
      2            Filename:       mac_pib.c
      3            Revised:        $Date: 2010-07-15 09:15:17 -0700 (Thu, 15 Jul 2010) $
      4            Revision:       $Revision: 23020 $
      5          
      6            Description:    This module contains procedures for the MAC PIB.
      7          
      8          
      9            Copyright 2006-2010 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /* ------------------------------------------------------------------------------------------------
     41           *                                          Includes
     42           * ------------------------------------------------------------------------------------------------
     43           */
     44          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     45          #include "hal_board.h"
     46          #include "mac_api.h"
     47          #include "mac_spec.h"
     48          #include "mac_low_level.h"
     49          #include "mac_radio_defs.h"
     50          #include "mac_main.h"
     51          #include "mac_pib.h"
     52          #include "OSAL.h"
     53          #include <stddef.h>
     54          
     55          /* ------------------------------------------------------------------------------------------------
     56           *                                           Constants
     57           * ------------------------------------------------------------------------------------------------
     58           */
     59          
     60          /* Attribute index constants, based on attribute ID values from spec */
     61          #define MAC_ATTR_SET1_START       0x40
     62          #define MAC_ATTR_SET1_END         0x5D
     63          #define MAC_ATTR_SET1_OFFSET      0
     64          #define MAC_ATTR_SET2_START       0xE0
     65          #define MAC_ATTR_SET2_END         0xE5
     66          #define MAC_ATTR_SET2_OFFSET      (MAC_ATTR_SET1_END - MAC_ATTR_SET1_START + MAC_ATTR_SET1_OFFSET + 1)
     67          
     68          /* frame response values */
     69          #define MAC_MAX_FRAME_RESPONSE_MIN  143
     70          #define MAC_MAX_FRAME_RESPONSE_MAX  25776
     71          
     72          /* ------------------------------------------------------------------------------------------------
     73           *                                           Typedefs
     74           * ------------------------------------------------------------------------------------------------
     75           */
     76          
     77          /* PIB access and min/max table type */
     78          typedef struct
     79          {
     80            uint8     offset;
     81            uint8     len;
     82            uint8     min;
     83            uint8     max;
     84          } macPibTbl_t;
     85          
     86          /* ------------------------------------------------------------------------------------------------
     87           *                                           Local Variables
     88           * ------------------------------------------------------------------------------------------------
     89           */
     90          
     91          /* PIB default values */

   \                                 In  segment CODE_C, align 1
     92          static CODE const macPib_t macPibDefaults =
   \                     macPibDefaults:
   \   000000   36000100     DB 54, 0, 1, 0, 6
   \            06      
   \   000005   0000         DW 0H
   \   000007   000F         DB 0, 15
   \   000009   00000000     DD 0
   \   00000D   00           DB 0
   \   00000E   0000         DW 0
   \   000010   00000000     DB 0, 0, 0, 0, 0, 0, 3
   \            000003  
   \   000017   FFFF         DW 65535
   \   000019   00000403     DB 0, 0, 4, 3
   \   00001D   FFFF         DW 65535
   \   00001F   0000         DB 0, 0
   \   000021   FFFF         DW 65535
   \   000023   0F           DB 15
   \   000024   F401         DW 500
   \   000026   0005         DB 0, 5
   \   000028   C404         DW 1220
   \   00002A   03200001     DB 3, 32, 0, 1, 0, 0, 11
   \            00000B  
   \   000031   0000         DW 0
   \   000033   00000000     DB 0, 0, 0, 0, 0, 0, 3, 1, 15
   \            00000301
   \            0F      
     93          {
     94            54,                                         /* ackWaitDuration */
     95            FALSE,                                      /* associationPermit */
     96            TRUE,                                       /* autoRequest */
     97            FALSE,                                      /* battLifeExt */
     98            6,                                          /* battLifeExtPeriods */
     99          
    100            NULL,                                       /* *pMacBeaconPayload */
    101            0,                                          /* beaconPayloadLength */
    102            MAC_BO_NON_BEACON,                          /* beaconOrder */
    103            0,                                          /* beaconTxTime */
    104            0,                                          /* bsn */
    105          
    106            {0, SADDR_MODE_EXT},                        /* coordExtendedAddress */
    107            MAC_SHORT_ADDR_NONE,                        /* coordShortAddress */
    108            0,                                          /* dsn */
    109            FALSE,                                      /* gtsPermit */
    110            4,                                          /* maxCsmaBackoffs */
    111          
    112            3,                                          /* minBe */
    113            0xFFFF,                                     /* panId */
    114            FALSE,                                      /* promiscuousMode */
    115            FALSE,                                      /* rxOnWhenIdle */
    116            MAC_SHORT_ADDR_NONE,                        /* shortAddress */
    117          
    118            MAC_SO_NONE,                                /* superframeOrder */
    119            0x01F4,                                     /* transactionPersistenceTime */
    120            FALSE,                                      /* assocciatedPanCoord */
    121            5,                                          /* maxBe */
    122            1220,                                       /* maxFrameTotalWaitTime */
    123          
    124            3,                                          /* maxFrameRetries */
    125            32,                                         /* ResponseWaitTime */
    126            0,                                          /* syncSymbolOffset */
    127            TRUE,                                       /* timeStampSupported */
    128            FALSE,                                      /* securityEnabled */
    129          
    130            /* Proprietary */
    131          #if defined (HAL_PA_LNA)
    132            19,                                         /* phyTransmitPower for CC2591 */
    133          #elif defined (HAL_PA_LNA_CC2590)
    134            11,                                         /* phyTransmitPower for CC2590 */
    135          #else
    136            0,                                          /* phyTransmitPower without frontend */
    137          #endif
    138            MAC_CHAN_11,                                /* logicalChannel */
    139            {0, SADDR_MODE_EXT},                        /* extendedAddress */
    140            1,                                          /* altBe */
    141            MAC_BO_NON_BEACON,                          /* deviceBeaconOrder */
    142          };
    143          
    144          /* PIB access and min/max table.  min/max of 0/0 means not checked; if min/max are
    145           * equal, element is read-only
    146           */

   \                                 In  segment CODE_C, align 1
    147          static CODE const macPibTbl_t macPibTbl[] =
   \                     macPibTbl:
   \   000000   00013636     DB 0, 1, 54, 54, 1, 1, 0, 1, 2, 1, 0, 1, 3, 1, 0, 1, 4, 1, 6, 6, 5, 2
   \            01010001
   \            02010001
   \            03010001
   \            04010606
   \            0502    
   \   000016   00000701     DB 0, 0, 7, 1, 0, 52, 8, 1, 0, 15, 9, 4, 1, 1, 13, 1, 0, 255, 14, 8, 0
   \            00340801
   \            000F0904
   \            01010D01
   \            00FF0E08
   \            00      
   \   00002B   00170200     DB 0, 23, 2, 0, 0, 25, 1, 0, 255, 26, 1, 0, 1, 27, 1, 0, 254, 28, 1, 0
   \            00190100
   \            FF1A0100
   \            011B0100
   \            FE1C0100
   \   00003F   081D0200     DB 8, 29, 2, 0, 0, 31, 1, 0, 1, 32, 1, 0, 1, 33, 2, 0, 0, 35, 1, 0, 15
   \            001F0100
   \            01200100
   \            01210200
   \            00230100
   \            0F      
   \   000054   24020000     DB 36, 2, 0, 0, 38, 1, 0, 1, 39, 1, 0, 8, 40, 2, 0, 255, 42, 1, 0, 7
   \            26010001
   \            27010008
   \            280200FF
   \            2A010007
   \   000068   2B010240     DB 43, 1, 2, 64, 44, 1, 0, 0, 45, 1, 0, 1, 46, 1, 0, 1, 47, 1, 0, 255
   \            2C010000
   \            2D010001
   \            2E010001
   \            2F0100FF
   \   00007C   30010B1C     DB 48, 1, 11, 28, 49, 8, 0, 0, 58, 1, 0, 8, 59, 1, 0, 15, 47, 1, 0, 0
   \            31080000
   \            3A010008
   \            3B01000F
   \            2F010000
    148          {
    149            {offsetof(macPib_t, ackWaitDuration), sizeof(uint8), 54, 54},                      /* MAC_ACK_WAIT_DURATION */
    150            {offsetof(macPib_t, associationPermit), sizeof(bool), FALSE, TRUE},                /* MAC_ASSOCIATION_PERMIT */
    151            {offsetof(macPib_t, autoRequest), sizeof(bool), FALSE, TRUE},                      /* MAC_AUTO_REQUEST */
    152            {offsetof(macPib_t, battLifeExt), sizeof(bool), FALSE, TRUE},                      /* MAC_BATT_LIFE_EXT */
    153            {offsetof(macPib_t, battLifeExtPeriods), sizeof(uint8), 6, 6},                     /* MAC_BATT_LIFE_EXT_PERIODS */
    154          
    155            {offsetof(macPib_t, pBeaconPayload), sizeof(uint8 *), 0, 0},                       /* MAC_BEACON_PAYLOAD */
    156            {offsetof(macPib_t, beaconPayloadLength), sizeof(uint8), 0, 52},                   /* MAC_BEACON_PAYLOAD_LENGTH */
    157            {offsetof(macPib_t, beaconOrder), sizeof(uint8), 0, 15},                           /* MAC_BEACON_ORDER */
    158            {offsetof(macPib_t, beaconTxTime), sizeof(uint32), 1, 1},                          /* MAC_BEACON_TX_TIME */
    159            {offsetof(macPib_t, bsn), sizeof(uint8), 0x00, 0xFF},                              /* MAC_BSN */
    160          
    161            {offsetof(macPib_t, coordExtendedAddress.addr.extAddr), sizeof(sAddrExt_t), 0, 0}, /* MAC_COORD_EXTENDED_ADDRESS */
    162            {offsetof(macPib_t, coordShortAddress), sizeof(uint16), 0, 0},                     /* MAC_COORD_SHORT_ADDRESS */
    163            {offsetof(macPib_t, dsn), sizeof(uint8), 0x00, 0xFF},                              /* MAC_DSN */
    164            {offsetof(macPib_t, gtsPermit), sizeof(bool), FALSE, TRUE},                        /* MAC_GTS_PERMIT */
    165          
    166            /* Range of maxCsmaBackoffs is between 0 and 5 in IEEE 802.15.4.
    167             * Such restriction is removed here to allow 802.15.4 non-compliant experimental
    168             * applications.
    169             * To be compliant with 802.15.4, application or upper layer must not set this
    170             * PIB attribute out of range of 802.15.4.
    171             * The range is still restricted to 254 since value 255 would cause backoff
    172             * counter to overflow, wrap around and loop infinitely. */
    173            {offsetof(macPib_t, maxCsmaBackoffs), sizeof(uint8), 0, 254},                      /* MAC_MAX_CSMA_BACKOFFS */
    174          
    175            {offsetof(macPib_t, minBe), sizeof(uint8), 0, 8},                                  /* MAC_MIN_BE */
    176            {offsetof(macPib_t, panId), sizeof(uint16), 0, 0},                                 /* MAC_PAN_ID */
    177            {offsetof(macPib_t, promiscuousMode), sizeof(bool), FALSE, TRUE},                  /* MAC_PROMISCUOUS_MODE */
    178            {offsetof(macPib_t, rxOnWhenIdle), sizeof(bool), FALSE, TRUE},                     /* MAC_RX_ON_WHEN_IDLE */
    179            {offsetof(macPib_t, shortAddress), sizeof(uint16), 0, 0},                          /* MAC_SHORT_ADDRESS */
    180          
    181            {offsetof(macPib_t, superframeOrder), sizeof(uint8), 0, 15},                       /* MAC_SUPERFRAME_ORDER */
    182            {offsetof(macPib_t, transactionPersistenceTime), sizeof(uint16), 0, 0},            /* MAC_TRANSACTION_PERSISTENCE_TIME */
    183            {offsetof(macPib_t, associatedPanCoord), sizeof(bool), FALSE, TRUE},               /* MAC_ASSOCIATED_PAN_COORD */
    184          
    185            /* Range of maxBe is between 3 and 8 in IEEE 802.15.4.
    186             * Such restriction is removed here to allow 802.15.4 non-compliant experimental
    187             * applications.
    188             * To be compliant with 802.15.4, application or upper layer must not set this
    189             * PIB attribute out of range of 802.15.4. */
    190            {offsetof(macPib_t, maxBe), sizeof(uint8), 0, 8},                                  /* MAC_MAX_BE */
    191            {offsetof(macPib_t, maxFrameTotalWaitTime), sizeof(uint16), 0x00, 0xFF},           /* MAC_MAX_FRAME_RESPONSE_TIME */
    192          
    193            {offsetof(macPib_t, maxFrameRetries), sizeof(uint8), 0, 7},                        /* MAC_MAX_FRAME_RETRIES */
    194            {offsetof(macPib_t, responseWaitTime), sizeof(uint8), 2, 64},                      /* MAC_RESPONSE_WAIT_TIME */
    195            {offsetof(macPib_t, syncSymbolOffset), sizeof(uint8), 0, 0},                       /* MAC_SYNC_SYMBOL_OFFSET */
    196            {offsetof(macPib_t, timeStampSupported), sizeof(bool), FALSE, TRUE},               /* MAC_TIMESTAMP_SUPPORTED */
    197            {offsetof(macPib_t, securityEnabled), sizeof(bool), FALSE, TRUE},                  /* MAC_SECURITY_ENABLED */
    198          
    199            /* Proprietary PIBs */
    200            {offsetof(macPib_t, phyTransmitPower), sizeof(uint8), 0, 0xFF},                    /* MAC_PHY_TRANSMIT_POWER */
    201            {offsetof(macPib_t, logicalChannel), sizeof(uint8), MAC_CHAN_11, MAC_CHAN_28},     /* MAC_LOGICAL_CHANNEL */
    202            {offsetof(macPib_t, extendedAddress.addr.extAddr), sizeof(sAddrExt_t), 0, 0},      /* MAC_EXTENDED_ADDRESS */
    203            {offsetof(macPib_t, altBe), sizeof(uint8), 0, 8},                                  /* MAC_ALT_BE */
    204            {offsetof(macPib_t, deviceBeaconOrder), sizeof(uint8), 0, 15},                     /* MAC_DEVICE_BEACON_ORDER */
    205            {offsetof(macPib_t, phyTransmitPower), sizeof(uint8), 0, 0},                       /* MAC_PHY_TRANSMIT_POWER_SIGNED */
    206          };
    207          
    208          /* Invalid PIB table index used for error code */
    209          #define MAC_PIB_INVALID     ((uint8) (sizeof(macPibTbl) / sizeof(macPibTbl[0])))
    210          
    211          /* ------------------------------------------------------------------------------------------------
    212           *                                           Global Variables
    213           * ------------------------------------------------------------------------------------------------
    214           */
    215          
    216          /* MAC PIB */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    217          macPib_t macPib;
   \                     macPib:
   \   000000                DS 60
   \   00003C                REQUIRE __INIT_XDATA_Z
    218          
    219          
    220          /**************************************************************************************************
    221           * @fn          macPibReset
    222           *
    223           * @brief       This function initializes the PIB.
    224           *
    225           * input parameters
    226           *
    227           * @param       None.
    228           *
    229           * output parameters
    230           *
    231           * None.
    232           *
    233           * @return      None.
    234           **************************************************************************************************
    235           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    236          MAC_INTERNAL_API void macPibReset(void)
   \                     macPibReset:
    237          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    238            /* copy PIB defaults */
    239            macPib = macPibDefaults;
   \   000004   90....       MOV     DPTR,#macPibDefaults
   \   000007   7C..         MOV     R4,#(macPib & 0xff)
   \   000009   7D..         MOV     R5,#((macPib >> 8) & 0xff)
   \   00000B   743C         MOV     A,#0x3c
   \   00000D   12....       LCALL   ?MOVE_LONG8_XDATA_CODE
    240          
    241            /* initialize random sequence numbers */
    242            macPib.dsn = macRadioRandomByte();
   \   000010                ; Setup parameters for call to function macRadioRandomByte
   \   000010   12....       LCALL   ??macRadioRandomByte?relay
   \   000013   E9           MOV     A,R1
   \   000014   90....       MOV     DPTR,#(macPib + 25)
   \   000017   F0           MOVX    @DPTR,A
    243            macPib.bsn = macRadioRandomByte();
   \   000018                ; Setup parameters for call to function macRadioRandomByte
   \   000018   12....       LCALL   ??macRadioRandomByte?relay
   \   00001B   E9           MOV     A,R1
   \   00001C   90....       MOV     DPTR,#(macPib + 13)
   \   00001F   F0           MOVX    @DPTR,A
    244          }
   \   000020   D083         POP     DPH
   \   000022   D082         POP     DPL
   \   000024   02....       LJMP    ?BRET
    245          
    246          /**************************************************************************************************
    247           * @fn          macPibIndex
    248           *
    249           * @brief       This function takes an PIB attribute and returns the index in to
    250           *              macPibTbl for the attribute.
    251           *
    252           * input parameters
    253           *
    254           * @param       pibAttribute - PIB attribute to look up.
    255           *
    256           * output parameters
    257           *
    258           * None.
    259           *
    260           * @return      Index in to macPibTbl for the attribute or MAC_PIB_INVALID.
    261           **************************************************************************************************
    262           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    263          static uint8 macPibIndex(uint8 pibAttribute)
   \                     macPibIndex:
    264          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    265            if ((pibAttribute >= MAC_ATTR_SET1_START) && (pibAttribute <= MAC_ATTR_SET1_END))
   \   000000   E9           MOV     A,R1
   \   000001   C3           CLR     C
   \   000002   9440         SUBB    A,#0x40
   \   000004   400C         JC      ??macPibIndex_0
   \   000006   E9           MOV     A,R1
   \   000007   C3           CLR     C
   \   000008   945E         SUBB    A,#0x5e
   \   00000A   5006         JNC     ??macPibIndex_0
    266            {
    267              return (pibAttribute - MAC_ATTR_SET1_START + MAC_ATTR_SET1_OFFSET);
   \   00000C   74C0         MOV     A,#-0x40
   \                     ??macPibIndex_1:
   \   00000E   29           ADD     A,R1
   \   00000F   F9           MOV     R1,A
   \   000010   8012         SJMP    ??macPibIndex_2
    268            }
    269            else if ((pibAttribute >= MAC_ATTR_SET2_START) && (pibAttribute <= MAC_ATTR_SET2_END))
   \                     ??macPibIndex_0:
   \   000012   E9           MOV     A,R1
   \   000013   C3           CLR     C
   \   000014   94E0         SUBB    A,#-0x20
   \   000016   400A         JC      ??macPibIndex_3
   \   000018   E9           MOV     A,R1
   \   000019   C3           CLR     C
   \   00001A   94E6         SUBB    A,#-0x1a
   \   00001C   5004         JNC     ??macPibIndex_3
    270            {
    271              return (pibAttribute - MAC_ATTR_SET2_START + MAC_ATTR_SET2_OFFSET);
   \   00001E   743E         MOV     A,#0x3e
   \   000020   80EC         SJMP    ??macPibIndex_1
    272            }
    273            else
    274            {
    275              return MAC_PIB_INVALID;
   \                     ??macPibIndex_3:
   \   000022   7924         MOV     R1,#0x24
   \                     ??macPibIndex_2:
   \   000024   02....       LJMP    ?BRET
    276            }
    277          }
    278          
    279          
    280          /**************************************************************************************************
    281           * @fn          MAC_MlmeGetReq
    282           *
    283           * @brief       This direct execute function retrieves an attribute value
    284           *              from the MAC PIB.
    285           *
    286           * input parameters
    287           *
    288           * @param       pibAttribute - The attribute identifier.
    289           * @param       pValue - pointer to the attribute value.
    290           *
    291           * output parameters
    292           *
    293           * @param       pValue - pointer to the attribute value.
    294           *
    295           * @return      The status of the request, as follows:
    296           *              MAC_SUCCESS Operation successful.
    297           *              MAC_UNSUPPORTED_ATTRIBUTE Attribute not found.
    298           *
    299           **************************************************************************************************
    300           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    301          uint8 MAC_MlmeGetReq(uint8 pibAttribute, void *pValue)
   \                     MAC_MlmeGetReq:
    302          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    303            uint8         i;
    304            halIntState_t intState;
    305          
    306            if ((i = macPibIndex(pibAttribute)) == MAC_PIB_INVALID)
   \   000009                ; Setup parameters for call to function macPibIndex
   \   000009   12....       LCALL   ??macPibIndex?relay
   \   00000C   E9           MOV     A,R1
   \   00000D   FA           MOV     R2,A
   \   00000E   8A..         MOV     ?V0 + 0,R2
   \   000010   7424         MOV     A,#0x24
   \   000012   6A           XRL     A,R2
   \   000013   7004         JNZ     ??MAC_MlmeGetReq_0
    307            {
    308              return MAC_UNSUPPORTED_ATTRIBUTE;
   \   000015   79F4         MOV     R1,#-0xc
   \   000017   8052         SJMP    ??MAC_MlmeGetReq_1
    309            }
    310          
    311            HAL_ENTER_CRITICAL_SECTION(intState);
   \                     ??MAC_MlmeGetReq_0:
   \   000019   A2AF         MOV     C,0xa8.7
   \   00001B   E4           CLR     A
   \   00001C   92E0         MOV     0xE0 /* A   */.0,C
   \   00001E   F5..         MOV     ?V0 + 3,A
   \   000020   C2AF         CLR     0xa8.7
    312            osal_memcpy(pValue, (uint8 *) &macPib + macPibTbl[i].offset, macPibTbl[i].len);
   \   000022   75..00       MOV     ?V0 + 1,#0x0
   \   000025   7402         MOV     A,#0x2
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?S_SHL
   \   00002C   E5..         MOV     A,?V0 + 0
   \   00002E   24..         ADD     A,#(macPibTbl & 0xff)
   \   000030   FA           MOV     R2,A
   \   000031   E5..         MOV     A,?V0 + 1
   \   000033   34..         ADDC    A,#((macPibTbl >> 8) & 0xff)
   \   000035   FB           MOV     R3,A
   \   000036                ; Setup parameters for call to function osal_memcpy
   \   000036   8A82         MOV     DPL,R2
   \   000038   8B83         MOV     DPH,R3
   \   00003A   E4           CLR     A
   \   00003B   93           MOVC    A,@A+DPTR
   \   00003C   24..         ADD     A,#(macPib & 0xff)
   \   00003E   F5..         MOV     ?V0 + 0,A
   \   000040   E4           CLR     A
   \   000041   34..         ADDC    A,#((macPib >> 8) & 0xff)
   \   000043   F5..         MOV     ?V0 + 1,A
   \   000045   75..00       MOV     ?V0 + 2,#0x0
   \   000048   78..         MOV     R0,#?V0 + 0
   \   00004A   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00004D   8A82         MOV     DPL,R2
   \   00004F   8B83         MOV     DPH,R3
   \   000051   A3           INC     DPTR
   \   000052   E4           CLR     A
   \   000053   93           MOVC    A,@A+DPTR
   \   000054   FC           MOV     R4,A
   \   000055   7D00         MOV     R5,#0x0
   \   000057   EE           MOV     A,R6
   \   000058   FA           MOV     R2,A
   \   000059   EF           MOV     A,R7
   \   00005A   FB           MOV     R3,A
   \   00005B   12....       LCALL   ??osal_memcpy?relay
   \   00005E   7403         MOV     A,#0x3
   \   000060   12....       LCALL   ?DEALLOC_XSTACK8
    313            HAL_EXIT_CRITICAL_SECTION(intState);
   \   000063   E5..         MOV     A,?V0 + 3
   \   000065   A2E0         MOV     C,0xE0 /* A   */.0
   \   000067   92AF         MOV     0xa8.7,C
    314            return MAC_SUCCESS;
   \   000069   7900         MOV     R1,#0x0
   \                     ??MAC_MlmeGetReq_1:
   \   00006B   7F04         MOV     R7,#0x4
   \   00006D   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000070                REQUIRE _A_IEN0
    315          }
    316          
    317          /**************************************************************************************************
    318           * @fn          MAC_MlmeSetReq
    319           *
    320           * @brief       This direct execute function sets an attribute value
    321           *              in the MAC PIB.
    322           *
    323           * input parameters
    324           *
    325           * @param       pibAttribute - The attribute identifier.
    326           * @param       pValue - pointer to the attribute value.
    327           *
    328           * output parameters
    329           *
    330           * None.
    331           *
    332           * @return      The status of the request, as follows:
    333           *              MAC_SUCCESS Operation successful.
    334           *              MAC_UNSUPPORTED_ATTRIBUTE Attribute not found.
    335           *
    336           **************************************************************************************************
    337           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    338          uint8 MAC_MlmeSetReq(uint8 pibAttribute, void *pValue)
   \                     MAC_MlmeSetReq:
    339          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
    340            uint8         i;
    341            halIntState_t intState;
    342          
    343            if (pibAttribute == MAC_BEACON_PAYLOAD)
   \   00000B   7445         MOV     A,#0x45
   \   00000D   65..         XRL     A,?V0 + 0
   \   00000F   700B         JNZ     ??MAC_MlmeSetReq_0
    344            {
    345              macPib.pBeaconPayload = pValue;
   \   000011   90....       MOV     DPTR,#(macPib + 5)
   \   000014   EE           MOV     A,R6
   \   000015   F0           MOVX    @DPTR,A
   \   000016   A3           INC     DPTR
   \   000017   EF           MOV     A,R7
   \   000018   F0           MOVX    @DPTR,A
    346              return MAC_SUCCESS;
   \   000019   02....       LJMP    ??MAC_MlmeSetReq_1 & 0xFFFF
    347            }
    348          
    349            /* look up attribute in PIB table */
    350            if ((i = macPibIndex(pibAttribute)) == MAC_PIB_INVALID)
   \                     ??MAC_MlmeSetReq_0:
   \   00001C                ; Setup parameters for call to function macPibIndex
   \   00001C   12....       LCALL   ??macPibIndex?relay
   \   00001F   E9           MOV     A,R1
   \   000020   FA           MOV     R2,A
   \   000021   8A..         MOV     ?V0 + 2,R2
   \   000023   7424         MOV     A,#0x24
   \   000025   6A           XRL     A,R2
   \   000026   7005         JNZ     ??MAC_MlmeSetReq_2
    351            {
    352              return MAC_UNSUPPORTED_ATTRIBUTE;
   \   000028   79F4         MOV     R1,#-0xc
   \   00002A   02....       LJMP    ??MAC_MlmeSetReq_3 & 0xFFFF
    353            }
    354          
    355            /* do range check; no range check if min and max are zero */
    356            if ((macPibTbl[i].min != 0) || (macPibTbl[i].max != 0))
   \                     ??MAC_MlmeSetReq_2:
   \   00002D   75..00       MOV     ?V0 + 3,#0x0
   \   000030   7402         MOV     A,#0x2
   \   000032   78..         MOV     R0,#?V0 + 2
   \   000034   12....       LCALL   ?S_SHL
   \   000037   E5..         MOV     A,?V0 + 2
   \   000039   24..         ADD     A,#(macPibTbl & 0xff)
   \   00003B   FA           MOV     R2,A
   \   00003C   E5..         MOV     A,?V0 + 3
   \   00003E   34..         ADDC    A,#((macPibTbl >> 8) & 0xff)
   \   000040   FB           MOV     R3,A
   \   000041   EA           MOV     A,R2
   \   000042   2402         ADD     A,#0x2
   \   000044   F8           MOV     R0,A
   \   000045   EB           MOV     A,R3
   \   000046   3400         ADDC    A,#0x0
   \   000048   F9           MOV     R1,A
   \   000049   8882         MOV     DPL,R0
   \   00004B   8983         MOV     DPH,R1
   \   00004D   E4           CLR     A
   \   00004E   93           MOVC    A,@A+DPTR
   \   00004F   F5..         MOV     ?V0 + 1,A
   \   000051   EA           MOV     A,R2
   \   000052   2403         ADD     A,#0x3
   \   000054   FC           MOV     R4,A
   \   000055   EB           MOV     A,R3
   \   000056   3400         ADDC    A,#0x0
   \   000058   FD           MOV     R5,A
   \   000059   E5..         MOV     A,?V0 + 1
   \   00005B   7008         JNZ     ??MAC_MlmeSetReq_4
   \   00005D   8C82         MOV     DPL,R4
   \   00005F   8D83         MOV     DPH,R5
   \   000061   E4           CLR     A
   \   000062   93           MOVC    A,@A+DPTR
   \   000063   605E         JZ      ??MAC_MlmeSetReq_5
    357            {
    358              /* if min == max, this is a read-only attribute */
    359              if (macPibTbl[i].min == macPibTbl[i].max)
   \                     ??MAC_MlmeSetReq_4:
   \   000065   8C82         MOV     DPL,R4
   \   000067   8D83         MOV     DPH,R5
   \   000069   E4           CLR     A
   \   00006A   93           MOVC    A,@A+DPTR
   \   00006B   65..         XRL     A,?V0 + 1
   \   00006D   7005         JNZ     ??MAC_MlmeSetReq_6
    360              {
    361                return MAC_READ_ONLY;
   \   00006F   79FB         MOV     R1,#-0x5
   \   000071   02....       LJMP    ??MAC_MlmeSetReq_3 & 0xFFFF
    362              }
    363          
    364              /* check for special cases */
    365              if (pibAttribute == MAC_MAX_FRAME_TOTAL_WAIT_TIME)
   \                     ??MAC_MlmeSetReq_6:
   \   000074   7458         MOV     A,#0x58
   \   000076   65..         XRL     A,?V0 + 0
   \   000078   7021         JNZ     ??MAC_MlmeSetReq_7
    366              {
    367                if ((*((uint16 *) pValue) < MAC_MAX_FRAME_RESPONSE_MIN) ||
    368                    (*((uint16 *) pValue) > MAC_MAX_FRAME_RESPONSE_MAX))
   \   00007A   8E82         MOV     DPL,R6
   \   00007C   8F83         MOV     DPH,R7
   \   00007E   C3           CLR     C
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   948F         SUBB    A,#-0x71
   \   000082   A3           INC     DPTR
   \   000083   E0           MOVX    A,@DPTR
   \   000084   9400         SUBB    A,#0x0
   \   000086   400E         JC      ??MAC_MlmeSetReq_8
   \   000088   8E82         MOV     DPL,R6
   \   00008A   8F83         MOV     DPH,R7
   \   00008C   C3           CLR     C
   \   00008D   E0           MOVX    A,@DPTR
   \   00008E   94B1         SUBB    A,#-0x4f
   \   000090   A3           INC     DPTR
   \   000091   E0           MOVX    A,@DPTR
   \   000092   9464         SUBB    A,#0x64
   \   000094   4005         JC      ??MAC_MlmeSetReq_7
    369                {
    370                  return MAC_INVALID_PARAMETER;
   \                     ??MAC_MlmeSetReq_8:
   \   000096   79E8         MOV     R1,#-0x18
   \   000098   02....       LJMP    ??MAC_MlmeSetReq_3 & 0xFFFF
    371                }
    372              }
    373          
    374              /* range check for general case */
    375              if ((*((uint8 *) pValue) < macPibTbl[i].min) || (*((uint8 *) pValue) > macPibTbl[i].max))
   \                     ??MAC_MlmeSetReq_7:
   \   00009B   8E82         MOV     DPL,R6
   \   00009D   8F83         MOV     DPH,R7
   \   00009F   E0           MOVX    A,@DPTR
   \   0000A0   C0E0         PUSH    A
   \   0000A2   8882         MOV     DPL,R0
   \   0000A4   8983         MOV     DPH,R1
   \   0000A6   E4           CLR     A
   \   0000A7   93           MOVC    A,@A+DPTR
   \   0000A8   F8           MOV     R0,A
   \   0000A9   D0E0         POP     A
   \   0000AB   C3           CLR     C
   \   0000AC   98           SUBB    A,R0
   \   0000AD   40E7         JC      ??MAC_MlmeSetReq_8
   \   0000AF   8C82         MOV     DPL,R4
   \   0000B1   8D83         MOV     DPH,R5
   \   0000B3   E4           CLR     A
   \   0000B4   93           MOVC    A,@A+DPTR
   \   0000B5   C0E0         PUSH    A
   \   0000B7   8E82         MOV     DPL,R6
   \   0000B9   8F83         MOV     DPH,R7
   \   0000BB   E0           MOVX    A,@DPTR
   \   0000BC   FC           MOV     R4,A
   \   0000BD   D0E0         POP     A
   \   0000BF   C3           CLR     C
   \   0000C0   9C           SUBB    A,R4
   \   0000C1   40D3         JC      ??MAC_MlmeSetReq_8
    376              {
    377                return MAC_INVALID_PARAMETER;
    378              }
    379          
    380            }
    381          
    382            /* set value in PIB */
    383            HAL_ENTER_CRITICAL_SECTION(intState);
   \                     ??MAC_MlmeSetReq_5:
   \   0000C3   A2AF         MOV     C,0xa8.7
   \   0000C5   E4           CLR     A
   \   0000C6   92E0         MOV     0xE0 /* A   */.0,C
   \   0000C8   F5..         MOV     ?V0 + 1,A
   \   0000CA   C2AF         CLR     0xa8.7
    384            osal_memcpy((uint8 *) &macPib + macPibTbl[i].offset, pValue, macPibTbl[i].len);
   \   0000CC                ; Setup parameters for call to function osal_memcpy
   \   0000CC   8E..         MOV     ?V0 + 4,R6
   \   0000CE   8F..         MOV     ?V0 + 5,R7
   \   0000D0   75..00       MOV     ?V0 + 6,#0x0
   \   0000D3   78..         MOV     R0,#?V0 + 4
   \   0000D5   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000D8   8A82         MOV     DPL,R2
   \   0000DA   8B83         MOV     DPH,R3
   \   0000DC   A3           INC     DPTR
   \   0000DD   E4           CLR     A
   \   0000DE   93           MOVC    A,@A+DPTR
   \   0000DF   FC           MOV     R4,A
   \   0000E0   7D00         MOV     R5,#0x0
   \   0000E2   8A82         MOV     DPL,R2
   \   0000E4   8B83         MOV     DPH,R3
   \   0000E6   E4           CLR     A
   \   0000E7   93           MOVC    A,@A+DPTR
   \   0000E8   24..         ADD     A,#(macPib & 0xff)
   \   0000EA   FA           MOV     R2,A
   \   0000EB   E4           CLR     A
   \   0000EC   34..         ADDC    A,#((macPib >> 8) & 0xff)
   \   0000EE   FB           MOV     R3,A
   \   0000EF   12....       LCALL   ??osal_memcpy?relay
   \   0000F2   7403         MOV     A,#0x3
   \   0000F4   12....       LCALL   ?DEALLOC_XSTACK8
    385            HAL_EXIT_CRITICAL_SECTION(intState);
   \   0000F7   E5..         MOV     A,?V0 + 1
   \   0000F9   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000FB   92AF         MOV     0xa8.7,C
    386          
    387            /* handle special cases */
    388            switch (pibAttribute)
   \   0000FD   E5..         MOV     A,?V0 + 0
   \   0000FF   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for MAC_MlmeSetReq>_0`:
   \   000102   00           DB        0
   \   000103   07           DB        7
   \   000104   50           DB        80
   \   000105   ....         DW        ??MAC_MlmeSetReq_9
   \   000107   52           DB        82
   \   000108   ....         DW        ??MAC_MlmeSetReq_10
   \   00010A   53           DB        83
   \   00010B   ....         DW        ??MAC_MlmeSetReq_11
   \   00010D   E0           DB        224
   \   00010E   ....         DW        ??MAC_MlmeSetReq_12
   \   000110   E1           DB        225
   \   000111   ....         DW        ??MAC_MlmeSetReq_13
   \   000113   E2           DB        226
   \   000114   ....         DW        ??MAC_MlmeSetReq_14
   \   000116   E5           DB        229
   \   000117   ....         DW        ??MAC_MlmeSetReq_15
   \   000119   ....         DW        ??MAC_MlmeSetReq_1
    389            {
    390              case MAC_PAN_ID:
    391                /* set pan id in radio */
    392                macRadioSetPanID(macPib.panId);
   \                     ??MAC_MlmeSetReq_9:
   \   00011B                ; Setup parameters for call to function macRadioSetPanID
   \   00011B   90....       MOV     DPTR,#(macPib + 29)
   \   00011E   E0           MOVX    A,@DPTR
   \   00011F   FA           MOV     R2,A
   \   000120   A3           INC     DPTR
   \   000121   E0           MOVX    A,@DPTR
   \   000122   FB           MOV     R3,A
   \   000123   12....       LCALL   ??macRadioSetPanID?relay
   \   000126   8041         SJMP    ??MAC_MlmeSetReq_1
    393                break;
    394          
    395              case MAC_SHORT_ADDRESS:
    396                /* set short address in radio */
    397                macRadioSetShortAddr(macPib.shortAddress);
   \                     ??MAC_MlmeSetReq_11:
   \   000128                ; Setup parameters for call to function macRadioSetShortAddr
   \   000128   90....       MOV     DPTR,#(macPib + 33)
   \   00012B   E0           MOVX    A,@DPTR
   \   00012C   FA           MOV     R2,A
   \   00012D   A3           INC     DPTR
   \   00012E   E0           MOVX    A,@DPTR
   \   00012F   FB           MOV     R3,A
   \   000130   12....       LCALL   ??macRadioSetShortAddr?relay
   \   000133   8034         SJMP    ??MAC_MlmeSetReq_1
    398                break;
    399          
    400              case MAC_RX_ON_WHEN_IDLE:
    401                /* turn rx on or off */
    402                if (macPib.rxOnWhenIdle)
   \                     ??MAC_MlmeSetReq_10:
   \   000135   90....       MOV     DPTR,#(macPib + 32)
   \   000138   E0           MOVX    A,@DPTR
   \   000139   7902         MOV     R1,#0x2
   \   00013B   6005         JZ      ??MAC_MlmeSetReq_16
    403                {
    404                  macRxEnable(MAC_RX_WHEN_IDLE);
   \   00013D                ; Setup parameters for call to function macRxEnable
   \   00013D   12....       LCALL   ??macRxEnable?relay
   \   000140   8027         SJMP    ??MAC_MlmeSetReq_1
    405                }
    406                else
    407                {
    408                  macRxDisable(MAC_RX_WHEN_IDLE);
   \                     ??MAC_MlmeSetReq_16:
   \   000142                ; Setup parameters for call to function macRxDisable
   \   000142   12....       LCALL   ??macRxDisable?relay
   \   000145   8022         SJMP    ??MAC_MlmeSetReq_1
    409                }
    410                break;
    411          
    412              case MAC_LOGICAL_CHANNEL:
    413                macRadioSetChannel(macPib.logicalChannel);
   \                     ??MAC_MlmeSetReq_13:
   \   000147                ; Setup parameters for call to function macRadioSetChannel
   \   000147   90....       MOV     DPTR,#(macPib + 48)
   \   00014A   E0           MOVX    A,@DPTR
   \   00014B   F9           MOV     R1,A
   \   00014C   12....       LCALL   ??macRadioSetChannel?relay
   \   00014F   8018         SJMP    ??MAC_MlmeSetReq_1
    414                break;
    415          
    416              case MAC_EXTENDED_ADDRESS:
    417                /* set ext address in radio */
    418                macRadioSetIEEEAddr(macPib.extendedAddress.addr.extAddr);
   \                     ??MAC_MlmeSetReq_14:
   \   000151                ; Setup parameters for call to function macRadioSetIEEEAddr
   \   000151   7A..         MOV     R2,#((macPib + 49) & 0xff)
   \   000153   7B..         MOV     R3,#(((macPib + 49) >> 8) & 0xff)
   \   000155   12....       LCALL   ??macRadioSetIEEEAddr?relay
   \   000158   800F         SJMP    ??MAC_MlmeSetReq_1
    419                break;
    420          
    421          #ifndef MAC_OBSOLETE_PHY_TRANSMIT_POWER
    422              /* Define MAC_OBSOLETE_PHY_TRANSMIT_POWER to save some code */
    423          
    424              case MAC_PHY_TRANSMIT_POWER:
    425                /* Legacy transmit power attribute */
    426          #if !defined HAL_MAC_USE_REGISTER_POWER_VALUES && \
    427            !defined HAL_PA_LNA && !defined HAL_PA_LNA_CC2590
    428                /* Legacy transmit power attribute value for CC2530 alone,
    429                 * or runtime selection support build means a negative absolute value.
    430                 * However, when used as register power values or
    431                 * with HAL_PA_LNAxxx definition (without runtime selection)
    432                 * the attribute value is not a negative absolute value. */
    433                macPib.phyTransmitPower = (uint8)(-(int8)macPib.phyTransmitPower);
   \                     ??MAC_MlmeSetReq_12:
   \   00015A   90....       MOV     DPTR,#(macPib + 47)
   \   00015D   E0           MOVX    A,@DPTR
   \   00015E   F4           CPL     A
   \   00015F   04           INC     A
   \   000160   F0           MOVX    @DPTR,A
    434          #endif /* !defined HAL_MAC_USE_REGISTER_POWER_VALUES && ... */
    435                /* pass through to next case -- do not break*/
    436          
    437          #endif /* MAC_OBSOLETE_PHY_TRANSMIT_POWER */
    438          
    439              case MAC_PHY_TRANSMIT_POWER_SIGNED:
    440                /* Set the transmit power */
    441                macRadioSetTxPower(macPib.phyTransmitPower);
   \                     ??MAC_MlmeSetReq_15:
   \   000161                ; Setup parameters for call to function macRadioSetTxPower
   \   000161   90....       MOV     DPTR,#(macPib + 47)
   \   000164   E0           MOVX    A,@DPTR
   \   000165   F9           MOV     R1,A
   \   000166   12....       LCALL   ??macRadioSetTxPower?relay
    442                break;
    443          
    444              default:
    445                break;
    446            }
    447          
    448            return MAC_SUCCESS;
   \                     ??MAC_MlmeSetReq_1:
   \   000169   7900         MOV     R1,#0x0
   \                     ??MAC_MlmeSetReq_3:
   \   00016B   7F07         MOV     R7,#0x7
   \   00016D   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000170                REQUIRE _A_IEN0
    449          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macPibReset?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macPibReset

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macPibIndex?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macPibIndex

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MAC_MlmeGetReq?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MAC_MlmeGetReq

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MAC_MlmeSetReq?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MAC_MlmeSetReq
    450          

   Maximum stack usage in bytes:

     Function                  ISTACK PSTACK XSTACK
     --------                  ------ ------ ------
     MAC_MlmeGetReq                0      0     15
       -> macPibIndex              0      0     24
       -> osal_memcpy              0      0     30
     MAC_MlmeSetReq                1      0     18
       -> macPibIndex              0      0     30
       -> osal_memcpy              0      0     36
       -> macRadioSetPanID         0      0     30
       -> macRadioSetShortAddr     0      0     30
       -> macRxEnable              0      0     30
       -> macRxDisable             0      0     30
       -> macRadioSetChannel       0      0     30
       -> macRadioSetIEEEAddr      0      0     30
       -> macRadioSetTxPower       0      0     30
     macPibIndex                   0      0     15
     macPibReset                   2      0      0
       -> macRadioRandomByte       4      0      0
       -> macRadioRandomByte       4      0      0


   Segment part sizes:

     Function/Label         Bytes
     --------------         -----
     _A_IEN0                   1
     macPibDefaults           60
     macPibTbl               144
     macPib                   60
     macPibReset              39
     macPibIndex              39
     MAC_MlmeGetReq          112
     MAC_MlmeSetReq          368
     ??macPibReset?relay       6
     ??macPibIndex?relay       6
     ??MAC_MlmeGetReq?relay    6
     ??MAC_MlmeSetReq?relay    6

 
 558 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
 204 bytes in segment CODE_C
   1 byte  in segment SFR_AN
  60 bytes in segment XDATA_Z
 
 786 bytes of CODE  memory
   0 bytes of DATA  memory (+ 1 byte shared)
  60 bytes of XDATA memory

Errors: none
Warnings: none
